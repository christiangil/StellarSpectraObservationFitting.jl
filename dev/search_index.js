var documenterSearchIndex = {"docs":
[{"location":"gettingstarted/#Getting-Started","page":"Getting Started","title":"Getting Started","text":"","category":"section"},{"location":"gettingstarted/#Installation","page":"Getting Started","title":"Installation","text":"","category":"section"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"The most current, tagged version of StellarSpectraObservationFitting.jl can be easily installed using Julia's Pkg","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"Pkg.add(\"StellarSpectraObservationFitting\")","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"If you would like to contribute to the package, or just want to run the latest (untagged) version, you can use the following","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"Pkg.develop(\"StellarSpectraObservationFitting\")","category":"page"},{"location":"gettingstarted/#Example","page":"Getting Started","title":"Example","text":"","category":"section"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"An example notebook can be found here","category":"page"},{"location":"gettingstarted/#Getting-Help","page":"Getting Started","title":"Getting Help","text":"","category":"section"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"To get help on specific functionality you can either look up the information here, or if you prefer you can make use of Julia's native doc-system. For example here's how to get additional information on StellarSpectraObservationFitting.calculate_initial_model within Julia's REPL:","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"?StellarSpectraObservationFitting.calculate_initial_model","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"If you encounter a bug or would like to participate in the development of this package come find us on Github.","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"christiangil/StellarSpectraObservationFitting.jl","category":"page"},{"location":"continuum/#Continuum-functions","page":"Continuum","title":"Continuum functions","text":"","category":"section"},{"location":"continuum/","page":"Continuum","title":"Continuum","text":"Modules = [StellarSpectraObservationFitting]\nPages   = [\"src/continuum_functions.jl\"]","category":"page"},{"location":"continuum/#StellarSpectraObservationFitting.bad_pixel_flagger-Tuple{AbstractMatrix{T} where T, AbstractMatrix{T} where T}","page":"Continuum","title":"StellarSpectraObservationFitting.bad_pixel_flagger","text":"bad_pixel_flagger(y, σ²; prop=.005, thres=8)\n\nFind anomalous pixels where δ⁴y/δ⁴x is high, passing prop and thres to outlier_mask()\n\n\n\n\n\n","category":"method"},{"location":"continuum/#StellarSpectraObservationFitting.continuum_normalize!-Tuple{StellarSpectraObservationFitting.Data}","page":"Continuum","title":"StellarSpectraObservationFitting.continuum_normalize!","text":"continuum_normalize!(d; order=6, kwargs...)\n\nDivide d.flux (and d.var) by its sigma-clipped polynomial continuum (or its square)\n\n\n\n\n\n","category":"method"},{"location":"continuum/#StellarSpectraObservationFitting.fit_continuum-Tuple{AbstractVector{T} where T, AbstractVector{T} where T, AbstractVector{T} where T}","page":"Continuum","title":"StellarSpectraObservationFitting.fit_continuum","text":"fit_continuum(x, y, σ²; ignore_weights=false, order=6, nsigma=[0.5,3.0], maxniter=50, edge_mask::Int=0)\n\nFit the continuum of y with a polynomial of order order using assymetric sigma-clipping, similar to wobble\n\n\n\n\n\n","category":"method"},{"location":"continuum/#StellarSpectraObservationFitting.flat_normalize!-Tuple{StellarSpectraObservationFitting.Data}","page":"Continuum","title":"StellarSpectraObservationFitting.flat_normalize!","text":"flat_normalize!(d; kwargs...)\n\nDivide d.flux (and d.var) by its 0.9 quantile value (or its square)\n\n\n\n\n\n","category":"method"},{"location":"continuum/#StellarSpectraObservationFitting.mask_bad_edges!-NTuple{4, AbstractMatrix{T} where T}","page":"Continuum","title":"StellarSpectraObservationFitting.mask_bad_edges!","text":"mask_bad_edges!(y, σ², log_λ_star, log_λ_star_bounds; window_width=128, min_snr=8., verbose=true, always_mask_something=false, edges=nothing, kwargs...)\n\nMask out edges of y (either given by edges or where y/σ is on average below min_snr)\n\n\n\n\n\n","category":"method"},{"location":"continuum/#StellarSpectraObservationFitting.mask_bad_pixel!-NTuple{4, AbstractMatrix{T} where T}","page":"Continuum","title":"StellarSpectraObservationFitting.mask_bad_pixel!","text":"mask_bad_pixel!(y, σ², log_λ_star, log_λ_star_bounds; padding=2, include_bary_shifts=false, verbose=true, bad_pixels=nothing, kwargs...)\n\nMask anomalous pixels where δ⁴y/δ⁴x is high\n\n\n\n\n\n","category":"method"},{"location":"continuum/#StellarSpectraObservationFitting.mask_high_pixels!-Tuple{AbstractVector{T} where T, AbstractVector{T} where T, AbstractVector{T} where T}","page":"Continuum","title":"StellarSpectraObservationFitting.mask_high_pixels!","text":"mask_high_pixels!(bad, y, σ²; padding=0, max_flux=2., padding=2, using_weights=false)\n\nMask out pixels whose y values are above max_flux\n\n\n\n\n\n","category":"method"},{"location":"continuum/#StellarSpectraObservationFitting.mask_infinite_pixels!-NTuple{4, AbstractMatrix{T} where T}","page":"Continuum","title":"StellarSpectraObservationFitting.mask_infinite_pixels!","text":"mask_infinite_pixels!(y, σ², log_λ_star, log_λ_star_bounds; padding=0, include_bary_shifts=false, verbose=true, kwargs...)\n\nMask out pixels whose y or σ² values are infinite\n\n\n\n\n\n","category":"method"},{"location":"continuum/#StellarSpectraObservationFitting.mask_isolated_pixels!-Tuple{AbstractMatrix{T} where T}","page":"Continuum","title":"StellarSpectraObservationFitting.mask_isolated_pixels!","text":"mask_isolated_pixels!(σ²; neighbors_required::Int=29, verbose::Bool=true)\n\nMask between two flagged pixels if there are fewer than neighbors_required pixels between them\n\n\n\n\n\n","category":"method"},{"location":"continuum/#StellarSpectraObservationFitting.mask_low_pixels!-Tuple{AbstractVector{T} where T, AbstractVector{T} where T, AbstractVector{T} where T}","page":"Continuum","title":"StellarSpectraObservationFitting.mask_low_pixels!","text":"mask_low_pixels!(bad, y, σ²; padding=0, min_flux=0., padding=2, using_weights=false)\n\nMask out pixels whose y values are below min_flux\n\n\n\n\n\n","category":"method"},{"location":"continuum/#StellarSpectraObservationFitting.outlier_mask-Tuple{AbstractVecOrMat{T} where T}","page":"Continuum","title":"StellarSpectraObservationFitting.outlier_mask","text":"outlier_mask(v; thres=10, prop=0.2, return_stats=false, only_low::Bool=false)\n\nMask outliers in v that are outside thres-σ after winsorizing out the top and bottom prop quantiles\n\n\n\n\n\n","category":"method"},{"location":"continuum/#StellarSpectraObservationFitting.process!-Tuple{Any}","page":"Continuum","title":"StellarSpectraObservationFitting.process!","text":"process!(d; λ_thres=4000., min_snr=8, kwargs...)\n\nDoing all of the data preprocessing, including continuum-fitting and masking\n\n\n\n\n\n","category":"method"},{"location":"continuum/#StellarSpectraObservationFitting.snap-Tuple{AbstractMatrix{T} where T}","page":"Continuum","title":"StellarSpectraObservationFitting.snap","text":"snap(y)\n\nEstimate δ⁴y/δ⁴x (a.k.a. the snap) with finite differences. See https://en.wikipedia.org/wiki/Finitedifference#Higher-orderdifferences\n\n\n\n\n\n","category":"method"},{"location":"indices/#Index","page":"Indices","title":"Index","text":"","category":"section"},{"location":"indices/","page":"Indices","title":"Indices","text":"","category":"page"},{"location":"indices/","page":"Indices","title":"Indices","text":"Modules = [StellarSpectraObservationFitting]","category":"page"},{"location":"indices/#ParameterHandling.flatten-Union{Tuple{T}, Tuple{Type{T}, StellarSpectraObservationFitting.LinearModel}} where T<:Real","page":"Indices","title":"ParameterHandling.flatten","text":"flatten([eltype=Real], x::LinearModel)\n\nReturns a \"flattened\" representation of x::LinearModel as a vector of vectors and a function unflatten that takes a vector of reals of the same length and returns a LinearModel object\n\n\n\n\n\n","category":"method"},{"location":"indices/#ParameterHandling.flatten-Union{Tuple{T}, Tuple{Type{T}, SubArray}} where T<:Real","page":"Indices","title":"ParameterHandling.flatten","text":"flatten([eltype=Real], x::SubArray)\n\nReturns a \"flattened\" representation of x::SubArray as a vector and a function unflatten that takes a vector of reals of the same length and returns an Array object\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting._trapzx2-NTuple{4, Real}","page":"Indices","title":"StellarSpectraObservationFitting._trapzx2","text":"_trapzx2(x1, x2, y1, y2)\n\nTwice the area under the line between (x1, y1) and (x2, y2). Used in trapezoidal integration\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting._vander-Tuple{AbstractVector{T} where T, Int64}","page":"Indices","title":"StellarSpectraObservationFitting._vander","text":"_vander(x, n)\n\nCalculate the the Vandermonde matrix. See https://en.wikipedia.org/wiki/Vandermonde_matrix\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.affected_pixels!-Tuple{Vector{T} where T, AbstractVector{T} where T}","page":"Indices","title":"StellarSpectraObservationFitting.affected_pixels!","text":"affected_pixels!(affected1, affected2)\n\nStore the indicies in both affected1 and affected2 in affected1\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.affected_pixels-Tuple{AbstractVecOrMat{T} where T}","page":"Indices","title":"StellarSpectraObservationFitting.affected_pixels","text":"affected_pixels(bad)\n\nStore the first indicies where bad` is true\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.banded_inds-Tuple{Int64, Int64, Int64}","page":"Indices","title":"StellarSpectraObservationFitting.banded_inds","text":"banded_inds(row, span, row_len)\n\nCalculate the bounds of the filled indices for row row of a banded matrix of span span\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.bounds_generator!-Tuple{AbstractVector{T} where T, AbstractVector{T} where T}","page":"Indices","title":"StellarSpectraObservationFitting.bounds_generator!","text":"bounds_generator!(bounds, xs)\n\nGetting the bounds of each element in xs assuming that they fully span the domain\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.bounds_generator-Tuple{AbstractVector{T} where T}","page":"Indices","title":"StellarSpectraObservationFitting.bounds_generator","text":"bounds_generator!(xs)\n\nGetting the bounds of each element in xs assuming that they fully span the domain\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.clip_vector!-Tuple{Vector{T} where T}","page":"Indices","title":"StellarSpectraObservationFitting.clip_vector!","text":"clip_vector!(vec; max=Inf, min=-Inf)\n\nSet values in vec above max to max and below min to min\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.copy_dict!-Tuple{Dict, Dict}","page":"Indices","title":"StellarSpectraObservationFitting.copy_dict!","text":"copy_dict!(to, from)\n\nCopy all entries in from to to\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.est_∇-Tuple{Function, Vector{var\"#s15\"} where var\"#s15\"<:Real}","page":"Indices","title":"StellarSpectraObservationFitting.est_∇","text":"est_∇(f, inputs; dif=1e-7, ignore_0_inputs=false)\n\nEstimate the gradient of f at inputs using finite differences.\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.estimate_σ_bootstrap-Tuple{StellarSpectraObservationFitting.ModelWorkspace}","page":"Indices","title":"StellarSpectraObservationFitting.estimate_σ_bootstrap","text":"estimate_σ_bootstrap(mws; n=50, return_holders=false, recalc_mean=false, multithread=nthreads() > 3, verbose=true)\n\nEstimate the uncertainties (and potentially covariances) for the RVs and scores in mws based on looking at the distribution of best-fit parameters after re-injecting photon noise. Slower than estimate_σ_curvature(), but more reliable.\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.estimate_σ_bootstrap_helper!-Tuple{AbstractMatrix{T} where T, Any, Any, Int64, StellarSpectraObservationFitting.ModelWorkspace, AbstractMatrix{T} where T, Int64}","page":"Indices","title":"StellarSpectraObservationFitting.estimate_σ_bootstrap_helper!","text":"estimate_σ_bootstrap_helper!(rv_holder, tel_holder, star_holder, i, mws, data_noise, n; verbose=true)\n\nRefit the RVs and scores after re-injecting photon noise and store the results in rv_holder, tel_holder, and star_holder\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.estimate_σ_bootstrap_reducer-Tuple{AbstractArray, AbstractArray, Function}","page":"Indices","title":"StellarSpectraObservationFitting.estimate_σ_bootstrap_reducer","text":"estimate_σ_bootstrap_reducer(shaper, holder, reducer)\n\nApply reducer on the first axis of holder and store the results in an array the shape of shaper\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.estimate_σ_curvature-Tuple{StellarSpectraObservationFitting.ModelWorkspace}","page":"Indices","title":"StellarSpectraObservationFitting.estimate_σ_curvature","text":"estimate_σ_curvature(mws; kwargs...)\n\nEstimate the uncertainties for the RVs and scores in mws based on the local curvature of the loss function. Faster than estimate_σ_bootstrap(), but less reliable from ignoring cross terms in the Hessian.\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.estimate_σ_curvature_helper-Tuple{AbstractVecOrMat{T} where T, Function}","page":"Indices","title":"StellarSpectraObservationFitting.estimate_σ_curvature_helper","text":"estimate_σ_curvature_helper(x, ℓ; n=7, use_gradient=false, multithread=nthreads() > 3, print_every=10, kwargs...)\n\nEstimate the uncertainties for the best-fit parameters x for ~Gaussian function ℓ based on the local curvature\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.estimate_σ_curvature_helper_finalizer!-Tuple{AbstractVecOrMat{T} where T, AbstractVector{T} where T, AbstractVector{T} where T, Int64}","page":"Indices","title":"StellarSpectraObservationFitting.estimate_σ_curvature_helper_finalizer!","text":"estimate_σ_curvature_helper_finalizer!(σs, _ℓs, x_test, i; use_gradient=false, param_str=\"\", print_every=10, verbose=false, show_plots=false)\n\nCalculate uncertanties (filling σs) based on the _ℓs calculated at x_test\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.find_modes-Union{Tuple{Vector{T}}, Tuple{T}} where T<:Real","page":"Indices","title":"StellarSpectraObservationFitting.find_modes","text":"find_modes(data; amount=3)\n\nReturn the indices of local maxima of a data array\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.flatten_ranges-Tuple{AbstractVector{T} where T}","page":"Indices","title":"StellarSpectraObservationFitting.flatten_ranges","text":"flatten_ranges(ranges)\n\nReturns a range from the largest first element of those in ranges to the smallest last element of those in ranges\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.fwhm_2_σ-Tuple{Real}","page":"Indices","title":"StellarSpectraObservationFitting.fwhm_2_σ","text":"fwhm_2_σ(fwhm)\n\nConvert full-width at half-maximum to σ\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.general_lst_sq-Union{Tuple{T}, Tuple{AbstractMatrix{T}, AbstractVector{T} where T, Union{LinearAlgebra.Cholesky, LinearAlgebra.Diagonal}}} where T<:Real","page":"Indices","title":"StellarSpectraObservationFitting.general_lst_sq","text":"general_lst_sq(dm, data, Σ)\n\nSolve a weighted linear system of equations. See https://en.wikipedia.org/wiki/Generalizedleastsquares#Method_outline\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.general_lst_sq_f-Tuple{AbstractVector{T} where T, Any, Int64}","page":"Indices","title":"StellarSpectraObservationFitting.general_lst_sq_f","text":"general_lst_sq_f(data, Σ, order; x=eachindex(data))\n\nGet a polynomial of order order fit to data\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.insert_and_dedup!-Tuple{Vector{T} where T, Any}","page":"Indices","title":"StellarSpectraObservationFitting.insert_and_dedup!","text":"\tinsert_and_dedup!(v, x)\n\nInsert x into sorted list v without duplicates\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.int2ind-Tuple{AbstractVecOrMat{T} where T, Int64}","page":"Indices","title":"StellarSpectraObservationFitting.int2ind","text":"int2ind(a, x)\n\nFind the index where x can be found in a\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.make_template-Tuple{Matrix{T} where T, Matrix{T} where T}","page":"Indices","title":"StellarSpectraObservationFitting.make_template","text":"make_template(matrix, σ²; default=1., use_mean=false, kwargs...)\n\nReduce matrix to its median (or weighted mean) and clip the result\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.make_template-Tuple{Matrix{T} where T}","page":"Indices","title":"StellarSpectraObservationFitting.make_template","text":"make_template(matrix; use_mean=false, kwargs...)\n\nReduce matrix to its median (or mean) and clip the result\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.mask!-Tuple{AbstractVecOrMat{T} where T, AbstractVecOrMat{T} where T}","page":"Indices","title":"StellarSpectraObservationFitting.mask!","text":"mask!(var, bad_inds; using_weights=false)\n\nSetting var to reflect that the pixels at bad_inds should be masked\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.mask_stellar_feature!-Tuple{AbstractMatrix{T} where T, AbstractMatrix{T} where T, Real, Real}","page":"Indices","title":"StellarSpectraObservationFitting.mask_stellar_feature!","text":"mask_stellar_feature!(var, log_λ_star, log_λ_low, log_λ_high; verbose=true, inverse=false, kwargs...)\n\nMasking where log_λ_star is between (or outside if inverse=true) log_λ_low and log_λ_high\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.mask_stellar_pixel!-Tuple{AbstractMatrix{T} where T, AbstractMatrix{T} where T, AbstractMatrix{T} where T, Int64}","page":"Indices","title":"StellarSpectraObservationFitting.mask_stellar_pixel!","text":"mask_stellar_pixel!(var, log_λ_star, log_λ_star_bounds, i; padding=0, verbose=true, kwargs...)\n\nMasking a pixel in the stellar frame to prevent different lines from coming in at different times\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.mask_telluric_feature!-Tuple{AbstractMatrix{T} where T, AbstractMatrix{T} where T, AbstractMatrix{T} where T, Real, Real}","page":"Indices","title":"StellarSpectraObservationFitting.mask_telluric_feature!","text":"mask_stellar_feature!(var, log_λ_obs, log_λ_star, log_λ_low, log_λ_high; verbose=true, include_bary_shifts=true, kwargs...)\n\nMasking where log_λ_obs is between log_λ_low and log_λ_high.  Can also perform in the stellar frame to prevent different lines from coming in at different times with include_bary_shifts\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.multiple_append!-Union{Tuple{T}, Tuple{Vector{T}, Vararg{Any, N} where N}} where T<:Real","page":"Indices","title":"StellarSpectraObservationFitting.multiple_append!","text":"multiple_append!(a, b...)\n\nGeneralized version of the Julia's append!() function\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.observation_night_inds-Tuple{AbstractVector{var\"#s11\"} where var\"#s11\"<:Real}","page":"Indices","title":"StellarSpectraObservationFitting.observation_night_inds","text":"observation_night_inds(times_in_days)\n\nFind the indices for each observing night\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.ordinary_lst_sq-Union{Tuple{T}, Tuple{AbstractMatrix{T}, AbstractVector{T} where T}} where T<:Real","page":"Indices","title":"StellarSpectraObservationFitting.ordinary_lst_sq","text":"ordinary_lst_sq(dm, data)\n\nSolve a linear system of equations. See https://en.wikipedia.org/wiki/Ordinaryleastsquares#Matrix/vector_formulation\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.ordinary_lst_sq_f-Tuple{AbstractVector{T} where T, Int64}","page":"Indices","title":"StellarSpectraObservationFitting.ordinary_lst_sq_f","text":"ordinary_lst_sq_f(data, order; x=eachindex(data))\n\nGet a polynomial of order order fit to data\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.oversamp_interp-Tuple{Real, Real, AbstractVector{T} where T, AbstractVector{T} where T}","page":"Indices","title":"StellarSpectraObservationFitting.oversamp_interp","text":"oversamp_interp(lo_x, hi_x, x, y)\n\nInterpolating by getting the average value of y from lo_x to hi_x\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.parse_args-Tuple{Int64, DataType, Any}","page":"Indices","title":"StellarSpectraObservationFitting.parse_args","text":"parse_args(ind, type, default)\n\nRetrieve ARGS[ind] as type type if it exists. Otherwise, return default\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.searchsortednearest-Tuple{AbstractVector{T} where T<:Real, Real}","page":"Indices","title":"StellarSpectraObservationFitting.searchsortednearest","text":"searchsortednearest(a, x; lower=false)\n\nFind the index of the value closest to x in a (which is a sorted vector)\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.self_cor-Tuple{AbstractMatrix{T} where T}","page":"Indices","title":"StellarSpectraObservationFitting.self_cor","text":"self_cor(a; set_diag=true)\n\nGet the correlation matrix between the rows in a\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.trapz_small-Tuple{AbstractVector{T} where T, AbstractVector{T} where T}","page":"Indices","title":"StellarSpectraObservationFitting.trapz_small","text":"trapz_small(x, y)\n\nTrapezoidal integration of y over x. Shamelessly modified from https://github.com/dextorious/NumericalIntegration.jl/blob/master/src/NumericalIntegration.jl.  See https://en.wikipedia.org/wiki/Trapezoidal_rule\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.trapz_small-Tuple{Real, Real, AbstractVector{T} where T, AbstractVector{T} where T}","page":"Indices","title":"StellarSpectraObservationFitting.trapz_small","text":"trapz_small(lo_x, hi_x, x, y)\n\nTrapezoidal integration of y over x from lo_x to hi_x. See https://en.wikipedia.org/wiki/Trapezoidal_rule\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.vector_zero-Tuple{AbstractVecOrMat{T} where T}","page":"Indices","title":"StellarSpectraObservationFitting.vector_zero","text":"vector_zero(θ)\n\nGet a zero version of θ\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.wavenumber_to_Å-Tuple{Real}","page":"Indices","title":"StellarSpectraObservationFitting.wavenumber_to_Å","text":"wavenumber_to_Å(wn)\n\nConvert wn (in 1/cm) to wavelength (in Å)\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.weighted_mean-Tuple{AbstractMatrix{T} where T, AbstractMatrix{T} where T}","page":"Indices","title":"StellarSpectraObservationFitting.weighted_mean","text":"weighted_mean(x, σ²; default=0., kwargs...)\n\nCalculates the weighted mean of x given σ²\n\n\n\n\n\n","category":"method"},{"location":"indices/#StellarSpectraObservationFitting.Å_to_wavenumber-Tuple{Real}","page":"Indices","title":"StellarSpectraObservationFitting.Å_to_wavenumber","text":"Å_to_wavenumber(λ)\n\nConvert λ (in Å) to wave number (in 1/cm)\n\n\n\n\n\n","category":"method"},{"location":"empca/#EMPCA-functions","page":"(D)EMPCA","title":"EMPCA functions","text":"","category":"section"},{"location":"empca/","page":"(D)EMPCA","title":"(D)EMPCA","text":"Modules = [StellarSpectraObservationFitting]\nPages   = [\"src/DPCA_functions.jl\", \"src/EMPCA.jl\"]","category":"page"},{"location":"empca/#StellarSpectraObservationFitting.DEMPCA!-Union{Tuple{T}, Tuple{AbstractVecOrMat{T} where T, AbstractVecOrMat{T} where T, AbstractVector{T} where T, AbstractVector{T} where T, AbstractMatrix{T} where T, AbstractMatrix{T} where T, Vector{T}}} where T<:Real","page":"(D)EMPCA","title":"StellarSpectraObservationFitting.DEMPCA!","text":"DEMPCA!(M, scores, rv_scores, μ, data_temp, weights, doppler_comp; min_flux=0., max_flux=2., save_doppler_in_M1=true, kwargs...)\n\nPerform Doppler-constrained Expectation maximization PCA on data_temp\n\n\n\n\n\n","category":"method"},{"location":"empca/#StellarSpectraObservationFitting.doppler_component-Union{Tuple{T}, Tuple{AbstractVector{T}, Vector{T}}} where T<:Real","page":"(D)EMPCA","title":"StellarSpectraObservationFitting.doppler_component","text":"doppler_component(λ, flux)\n\nEstimate the basis vector that encodes the effects of a doppler shift based on Taylor expanding f(λ/(1 + z)) about z=0 doppler_comp = λ * dF/dλ -> units of flux\n\n\n\n\n\n","category":"method"},{"location":"empca/#StellarSpectraObservationFitting.doppler_component_AD-Union{Tuple{T}, Tuple{Vector{T}, Vector{T}}} where T<:Real","page":"(D)EMPCA","title":"StellarSpectraObservationFitting.doppler_component_AD","text":"doppler_component_AD(λ, flux)\n\nEstimate the basis vector that encodes the effects of a doppler shift based on Taylor expanding f(λ/(1 + z)) about z=0. Autodiff friendly doppler_comp = λ * dF/dλ -> units of flux\n\n\n\n\n\n","category":"method"},{"location":"empca/#StellarSpectraObservationFitting.project_doppler_comp!-Tuple{AbstractVector{T} where T, AbstractMatrix{T} where T, AbstractVector{T} where T, AbstractMatrix{T} where T}","page":"(D)EMPCA","title":"StellarSpectraObservationFitting.project_doppler_comp!","text":"project_doppler_comp!(scores, data_temp, doppler_comp, weights)\n\nFinding the optimal scores to remove the weighted projection of doppler_comp from data_temp\n\n\n\n\n\n","category":"method"},{"location":"empca/#StellarSpectraObservationFitting.project_doppler_comp-Tuple{AbstractMatrix{T} where T, AbstractVector{T} where T, AbstractMatrix{T} where T}","page":"(D)EMPCA","title":"StellarSpectraObservationFitting.project_doppler_comp","text":"project_doppler_comp(data_temp, doppler_comp, weights)\n\nRemove the weighted projection of doppler_comp from data_temp\n\n\n\n\n\n","category":"method"},{"location":"empca/#StellarSpectraObservationFitting.simple_derivative-Tuple{AbstractVector{var\"#s16\"} where var\"#s16\"<:Real}","page":"(D)EMPCA","title":"StellarSpectraObservationFitting.simple_derivative","text":"simple_derivative(x)\n\nEstimate the derivative of x with finite differences (assuming unit separation)\n\n\n\n\n\n","category":"method"},{"location":"empca/#StellarSpectraObservationFitting.simple_derivative_AD-Tuple{Vector{var\"#s17\"} where var\"#s17\"<:Real}","page":"(D)EMPCA","title":"StellarSpectraObservationFitting.simple_derivative_AD","text":"simple_derivative_AD(x)\n\nEstimate the derivative of x with finite differences (assuming unit separation). Autodiff friendly\n\n\n\n\n\n","category":"method"},{"location":"empca/#ExpectationMaximizationPCA.EMPCA!-Tuple{StellarSpectraObservationFitting.FullLinearModel, AbstractMatrix{T} where T, AbstractMatrix{T} where T}","page":"(D)EMPCA","title":"ExpectationMaximizationPCA.EMPCA!","text":"EMPCA!(lm, data_tmp, weights; kwargs...)\n\nPerform Expectation maximization PCA on data_temp. See https://github.com/christiangil/ExpectationMaximizationPCA.jl\n\n\n\n\n\n","category":"method"},{"location":"LICENSE/#LICENSE","page":"LICENSE","title":"LICENSE","text":"","category":"section"},{"location":"LICENSE/","page":"LICENSE","title":"LICENSE","text":"using Markdown, StellarSpectraObservationFitting\nMarkdown.parse_file(joinpath(pkgdir(StellarSpectraObservationFitting), \"LICENSE.md\"))","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = StellarSpectraObservationFitting","category":"page"},{"location":"#StellarSpectraObservationFitting.jl-Documentation","page":"Home","title":"StellarSpectraObservationFitting.jl Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"StellarSpectraObservationFitting (SSOF) is a Julia package for creating data-driven models (with fast, physically-motivated Gaussian Process regularization) for the time-variable spectral features for both the telluric transmission and stellar spectrum measured by Extremely Precise Radial Velcotiy (EPRV) spectrographs. ","category":"page"},{"location":"#Where-to-begin?","page":"Home","title":"Where to begin?","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If you haven't used SSOF before, a good place to start is the \"Getting Started\" section. We list how to install the package as well as a simple example","category":"page"},{"location":"","page":"Home","title":"Home","text":"Pages = [\"gettingstarted.md\"]\nDepth = 2","category":"page"},{"location":"#Indices","page":"Home","title":"Indices","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"All of the package functions can be found here","category":"page"},{"location":"","page":"Home","title":"Home","text":"Pages = [\"indices.md\"]","category":"page"}]
}
